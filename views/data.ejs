<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<meta http-equiv="X-UA-Compatible" content="IE=edge">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<title>BITS '22 | Profile</title>
        <link rel="icon" type="image/x-icon" href="/img/bits-logo.png">
	<link rel="preconnect" href="https://fonts.googleapis.com">
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
        <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@500;700&display=swap" rel="stylesheet">
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.0/css/all.min.css">
	<link rel="stylesheet" href="/css/profile.css">
</head>
<body>
	<%- include("partials/nav", {active: "", user: username}) %>
	
	<header class="header">
		<div class="header-text">
			<div class="header-welcome">
				<h1>Welcome, <%=userData.username%></h1>
			</div>
			<div class="header-user">
				<p><%=userData.fullname%></p>
				<p>|</p>
				<p><%=String(userData.grade).replace(/1000/g, ' ')%></p>
			</div>
		</div>
		<div class="header-buttons">
			<div class="header-btn"><a href="/logout">Sign Out</a></div>
		</div>
	</header>

	<main class="main">
		<%- include("partials/profile_taskcat.ejs", {"category": "pending", "arr": pendingResults}) %>
		<%- include("partials/profile_taskcat.ejs", {"category": "accepted", "arr": approvedResults}) %>
		<%- include("partials/profile_taskcat.ejs", {"category": "rejected", "arr": declinedResults}) %>
	</main>

	<%- include("partials/footer", { active: "profile" }) %>

     <script>

  var INITIAL_WAIT = 3000;
  var INTERVAL_WAIT = 10000;
  var ONE_SECOND = 1000;

  var events = ["mouseup", "keydown", "scroll", "mousemove"];
  var startTime = Date.now();
  var endTime = startTime + INITIAL_WAIT;
  var totalTime = 0;
  var clickCount = 0;
  var buttonClicks = {
      total: 0,
  };
  var buttonClickCount = 0;
  var linkClickCount = 0;
  var keypressCount = 0;
  var scrollCount = 0;
  var mouseMovementCount = 0;
  var linkClickCount = 0;

  setInterval(function () {
      if (!document.hidden && startTime <= endTime) {
          startTime = Date.now();
          totalTime += ONE_SECOND;
      }
  }, ONE_SECOND);

  document.addEventListener("DOMContentLoaded", function () {
      events.forEach(function (e) {
          document.addEventListener(e, function () {
              endTime = Date.now() + INTERVAL_WAIT;
              if (e === "mouseup") {
                  clickCount++;
                  if (event.target.nodeName === 'BUTTON') {
                      if (!buttonClicks[event.target.innerText]) {
                          buttonClicks[event.target.innerText] = 0;
                      }
                      buttonClicks[event.target.innerText] += 1;
                      buttonClicks.total += 1;
                  }
                  else if (event.target.nodeName === 'A') {
                      linkClickCount++;
                  }
              }
              else if (e === "keydown") {
                  keypressCount++;
              }
              else if (e === "scroll") {
                  scrollCount++;
              }
              else if (e === "mousemove") {
                  mouseMovementCount++;
              }
          });
      });
  });

  window.addEventListener('beforeunload', function (e) {
      const data = { 
          timeSpend: totalTime,
          totalClicks: clickCount,
          totalButtonClicks: buttonClicks,
          totalButtonClickCount: buttonClickCount,
          totalLinkClickCount: linkClickCount,
          totalKeypressCount: keypressCount,
          totalScrollCount: scrollCount,
          totalMouseMovementCount: mouseMovementCount
       };

      fetch('/update', {
          method: 'POST', // or 'PUT'
          headers: {
              'Content-Type': 'application/json',
          },
          body: JSON.stringify(data),
      })
          .then((response) => response.json())
          .then((data) => {
              console.log('Success:', data);
          })
          .catch((error) => {
              console.error('Error:', error);
          });
  });
</script>
</body>
</html>